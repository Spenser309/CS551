.ifdef BSD_PKG_MK    # begin pkgsrc settings

CC= gcc
COMPILER_TYPE=gnu
AR=ar

PKGSRC_COMPILER=    gcc

PKG_DBDIR=        /usr/var/db/pkg
LOCALBASE=        /usr/pkg
VARBASE=        /usr/var
PKG_TOOLS_BIN=        /usr/sbin
PKGMANDIR=        man

FETCH_USING?=        fetch
EXTRACT_USING?=    bsdtar

# This is where binary packages are stored.
# PACKAGES?= /usr/tmp/packages

# This is where packages will be extracted and compiled
WRKOBJDIR?=    /usr/tmp/work

# This hack is required because, pkgsrc insists on having a working dlopen
# even for packages that build and work okay when we don't have one (perl,
# libtool, etc). This will cause packages that really require dlopen to fail
# during the build/configure stage. But considering the number of packages
# that work, this is okay
IS_BUILTIN.dl?=    yes

CURSES_DEFAULT?= ncurses

PKG_OPTIONS.groff=-x11 -groff-docs
PKG_OPTIONS.scmgit=-python -scmgit-gui

# no inet6
PKG_DEFAULT_OPTIONS?= -inet6

# allow all licenses for external packages
SKIP_LICENSE_CHECK=yes

# where will pkgsrc place startup scripts?
PKG_RCD_SCRIPTS=YES
RCD_SCRIPTS_DIR=/usr/pkg/etc/rc.d

# no g- prefix for binutils
BINUTILS_PROGRAM_PREFIX=

# where to keep binary packages
PACKAGES=${PKGSRCDIR}/packages/${OS_VERSION}/${MACHINE_ARCH}

.endif            # end pkgsrc settings
